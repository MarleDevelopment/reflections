What happens when you initialize a repository? Why do you need to do it?
	The folder .git is created, where my commits will be saved.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The staging area defines which files of the working directory will be tracked
	in the repository by the commits.
	It probably offers the value (T/F) depending on if a file of the working directory
	is part of the staging area or not.

How can you use the staging area to make sure you have one commit per logical
change?
	If several files have changed you can use the staging area to commit files seperately,
	so that the files will be commited one after another.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branches help to track two different versions and their different progress i.e. code change
	seperately. So changes of one branch don't affect the others when introducing new features,...
	and they are still working.
	Branches could help tracking BackUps from time to time, as a BackUp-Branch.
	In addition to that it makes sense to introduce new features on a Development-Branch.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
